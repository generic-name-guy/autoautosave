#library "Autoautosave"
#include "zcommon.acs"

int timeCounter = 0;
int health = 0;

int minBossHealth;
int saveMinWait;
int healthLimit;

bool massiveAlertEnabled;
bool bossAlertEnabled;
int alertLimit;
int alertCountOld = 0;

script "m8f_AasToggle" (void)
{
  int playerN = PlayerNumber();
  bool enabled = GetUserCVar(playerN, "M8fAasEnabled");
  enabled = !enabled;
  SetUserCVar(playerN, "M8fAasEnabled", enabled);
  if (enabled)
  {
    Log(s:"Autoautosave is on.");
  }
  else
  {
    Log(s:"Autoautosave is off.");
  }
}

script "m8f_ManualAutoSave" (void)
{
  Autosave();
  timeCounter = 0;
}

script "m8f_AlertSave" (void)
{
  if (!massiveAlertEnabled) { terminate; }

  int alertCount = ThingCountName("AutoautosaveAlertToken", 0) - alertCountOld;
  alertCountOld = alertCount;

  if (alertCount >= alertLimit && timeCounter > saveMinWait && health >= healthLimit)
  {
    Autosave();
    timeCounter = 0;
  }
}

script "m8f_BossAlertSave" (void)
{
  if (!bossAlertEnabled) { terminate; }

  if (timeCounter > saveMinWait && health >= healthLimit)
  {
    Autosave();
    timeCounter = 0;
  }
}

script "m8f_CheckKill" Kill
{
  int maxHealth = GetActorProperty(0, APROP_SpawnHealth);
  if (maxHealth >= minBossHealth
      && timeCounter > saveMinWait
      && health >= healthLimit)
  {
    Autosave();
    timeCounter = 0;
  }
}

script "m8f_Autoautosave" Enter
{
  bool allMonstersKilledOld = AS_IsAllMonsterKilled();
  bool allItemsFoundOld     = AS_IsAllItemsFound();
  int  secretsFoundOld      = AS_SecretsFound();

  str  armorOld             = AS_GetArmor();
  int  healthOld            = AS_GetHealth();

  int  keyCountOld          = AS_GetKeyCount();
  int  weaponCountOld       = AS_GetWeaponCount();
  int  powerupCountOld      = AS_GetPowerupCount();

  int playerN = PlayerNumber();

  while (true)
  {
    saveMinWait   = GetUserCVar(playerN, "M8fAasMinSaveWait")   >> 16;
    minBossHealth = GetUserCVar(playerN, "M8fAasMinBossHealth") >> 16;
    healthLimit   = GetUserCVar(playerN, "M8fAasHealthLimit")   >> 16;
    int autosavePeriod = (GetUserCVar(playerN, "M8fAasAutosavePeriod") >> 16) * 60;

    alertLimit          = GetUserCVar(playerN, "M8fAasMassiveAlertThreshold") >> 16;
    massiveAlertEnabled = GetUserCVar(playerN, "M8fAasSaveOnMassiveAlert");
    bossAlertEnabled    = GetUserCVar(playerN, "M8fAasSaveOnBossAlert");

    int healthThresholdDown = GetUserCVar(playerN, "M8fAasHealthThresholdDown") >> 16;
    int healthThresholdUp   = GetUserCVar(playerN, "M8fAasHealthThresholdUp")   >> 16;
    int armorThresholdDown  = GetUserCVar(playerN, "M8fAasArmorThresholdDown")  >> 16;
    int armorThresholdUp    = GetUserCVar(playerN, "M8fAasArmorThresholdUp")    >> 16;

    bool autosaveOnKey = GetUserCVar(playerN, "M8fAasSaveOnKeys");
    bool autosaveOnWeapon = GetUserCVar(playerN, "M8fAasSaveOnWeapon");
    bool autosaveOnPowerup = GetUserCVar(playerN, "M8fAasSaveOnPowerup");

    bool saveOnBigHeal     = GetUserCVar(playerN, "M8fAasSaveOnBigHeal");
    bool saveOnArmorChange = GetUserCVar(playerN, "M8fAasSaveOnArmorChange");
    bool saveOnAllKilled   = GetUserCVar(playerN, "M8fAasSaveOnAllKilled");
    bool saveOnAllFound    = GetUserCVar(playerN, "M8fAasSaveOnAllFound");
    bool saveOnSecret      = GetUserCVar(playerN, "M8fAasSaveOnSecret");
    bool saveOnHealthArmorChanges = GetUserCVar(playerN, "M8fAasSaveOnHealthArmorChange");

    ++timeCounter;

    health    = AS_GetHealth();
    str armor = AS_GetArmor();

    bool allMonstersKilled = AS_IsAllMonsterKilled();
    bool allItemsFound     = AS_IsAllItemsFound();
    int  secretsFound      = AS_SecretsFound();

    int keyCount     = AS_GetKeyCount();
    int weaponCount  = AS_GetWeaponCount();
    int powerupCount = AS_GetPowerupCount();

    bool mustAutosave = (saveOnBigHeal && health > healthOld + 25)
      || (saveOnArmorChange && armorOld != armor && StrCmp(armor, "None"))

      || (saveOnAllKilled && allMonstersKilledOld != allMonstersKilled)
      || (saveOnAllFound && allItemsFoundOld != allItemsFound)
      || (saveOnSecret && secretsFoundOld != secretsFound)

      || (autosavePeriod != 0 && timeCounter >= autosavePeriod)

      || (autosaveOnKey && keyCount > keyCountOld)
      || (autosaveOnWeapon && weaponCount > weaponCountOld)
      || (autosaveOnPowerup && powerupCount > powerupCountOld)

      || ( saveOnHealthArmorChanges &&
           (
              (healthOld >= healthThresholdDown && health < healthThresholdDown)
           || (healthOld <= healthThresholdUp   && health > healthThresholdUp)
           || (armorOld >= armorThresholdDown && armor < armorThresholdDown)
           || (armorOld <= armorThresholdUp   && armor > armorThresholdUp)
           )
         )
      ;

    healthOld = health;
    armorOld  = armor;

    allMonstersKilledOld = allMonstersKilled;
    allItemsFoundOld     = allItemsFound;
    secretsFoundOld      = secretsFound;

    keyCountOld     = keyCount;
    weaponCountOld  = weaponCount;
    powerupCountOld = powerupCount;

    bool enabled = GetUserCVar(playerN, "M8fAasEnabled");

    if (mustAutosave
        && timeCounter > saveMinWait
        && health >= healthLimit
        && enabled
        )
    {
      Autosave();
      timeCounter = 0;
    }

    Delay(35);
  }
}

function bool AS_IsAllMonsterKilled(void)
{
  int totalMonsters  = GetLevelInfo(LEVELINFO_TOTAL_MONSTERS);
  int killedMonsters = GetLevelInfo(LEVELINFO_KILLED_MONSTERS);
  return (totalMonsters == killedMonsters);
}

function bool AS_IsAllItemsFound(void)
{
  int totalItems = GetLevelInfo(LEVELINFO_TOTAL_ITEMS);
  int foundItems = GetLevelInfo(LEVELINFO_FOUND_ITEMS);
  return (totalItems == foundItems);
}

function int AS_SecretsFound(void)
{
  return GetLevelInfo(LEVELINFO_FOUND_SECRETS);
}

function str AS_GetArmor(void)
{
  return GetArmorInfo(ARMORINFO_CLASSNAME);
}

function str AS_GetHealth(void)
{
  return GetActorProperty(0, APROP_HEALTH);
}

function int AS_GetKeyCount(void)
{
  return CheckInventory("AutoautosaveTokenKey");
}

function int AS_GetWeaponCount(void)
{
  return CheckInventory("AutoautosaveTokenWeapon");
}

function int AS_GetPowerupCount(void)
{
  return CheckInventory("AutoautosaveTokenPowerup");
}
