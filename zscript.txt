version "3.2.5"

class AutoautosaveEventHandler : EventHandler
{
  override void OnRegister()
  {
    CVar mapLoadedCVar = CVar.FindCVar("M8fAasMapLoaded");
    mapLoadedCVar.SetInt(0);
  }

  override void WorldThingSpawned(WorldEvent e)
  {
    Actor thing = e.Thing;

    Inventory a = Inventory(thing);
    if (a == Null)
    {
      if (thing.bISMONSTER)
      {
        vector3 p = thing.SpawnPoint;
        Actor spawned;
        float minBossHealth = CVar.FindCVar("M8fAasMinBossHealth").GetFloat();
        if (thing.health >= minBossHealth)
        {
          spawned = Actor.Spawn("AutoautosaveBossAlerter", p);
        }
        else
        {
          spawned = Actor.Spawn("AutoautosaveAlerter", p);
        }
        spawned.Angle = thing.Angle;
      }
      return;
    }

    CVar mapLoadedCVar     = CVar.FindCVar("M8fAasMapLoaded");
    CVar saveOnDroppedCVar = CVar.FindCVar("M8fAasSaveOnDropped");
    bool mapLoaded = mapLoadedCVar.GetInt();
    bool saveOnDropped = saveOnDroppedCVar.GetInt();
    if (!saveOnDropped && mapLoaded) { return; }

    string trailblazerPowerupClass = "TBPowerupBase";
    string squareGoonadesClass = "Goonades";

    string tokenClass;
    if      (a is "Key")           { tokenClass = "AutoautosaveTokenKey"; }
    else if (a is "Weapon")        { tokenClass = "AutoautosaveTokenWeapon"; }
    else if (a is squareGoonadesClass) { tokenClass = "AutoautosaveTokenWeapon"; }
    else if (a is "PowerupGiver")  { tokenClass = "AutoautosaveTokenPowerup"; }
    else if (a is trailblazerPowerupClass) { tokenClass = "AutoautosaveTokenPowerup"; }
    else if (a is "BackpackItem")  { tokenClass = "AutoautosaveTokenBackpack"; }
    else { return; }

    Actor o = a.owner;
    if (o == Null) { Actor.Spawn(tokenClass, a.SpawnPoint); }
    else           { o.GiveInventory(tokenClass, 1); }
  }
}

class AutoautosaveToken : CustomInventory
{
  Default
  {
    Inventory.MaxAmount 0;
    +INVENTORY.QUIET
  }
  States
  {
  Spawn:
    TNT1 A -1;
    stop;
  }
}

class AutoautosaveTokenWeapon : AutoautosaveToken
{
  States
  {
    Pickup:
      TNT1 A 1 ACS_NamedExecute("m8f_WeaponPickupAutoSave", 0);
      stop;
  }
}

class AutoautosaveTokenKey : AutoautosaveToken
{
  States
  {
    Pickup:
      TNT1 A 1 ACS_NamedExecute("m8f_KeyPickupAutoSave", 0);
      stop;
  }
}

class AutoautosaveTokenPowerup : AutoautosaveToken
{
  States
  {
    Pickup:
      TNT1 A 1 ACS_NamedExecute("m8f_PowerupPickupAutoSave", 0);
      stop;
  }
}

class AutoautosaveTokenBackpack: AutoautosaveToken
{
  States
  {
    Pickup:
      TNT1 A 1 ACS_NamedExecute("m8f_BackpackPickupAutoSave", 0);
      stop;
  }
}

class AutoautosaveAlertToken : Actor {}

class AutoautosaveAlerter : Actor
{
  States
  {
  Spawn:
    TNT1 A 10 A_Look;
    Loop;
  See:
    TNT1 A 1 A_SpawnItemEx("AutoautosaveAlertToken");
    TNT1 A 1 ACS_NamedExecute("m8f_AlertSave", 0);
    Stop;
  }
}

class AutoautosaveBossAlerter : Actor
{
  States
  {
  Spawn:
    TNT1 A 10 A_Look;
    Loop;
  See:
    TNT1 A 1 ACS_NamedExecute("m8f_BossAlertSave", 0);
    Stop;
  }
}
